//=======================================================
// Mixins
//=======================================================

// Clearfix
@mixin clearfix {
  &::after {
    content: '';
    display: table;
    clear: both;
  }
}

// Makes an element visually hidden, but accessible.
// @see http://snook.ca/archives/html_and_css/hiding-content-for-accessibility
@mixin element-invisible {
  position: absolute !important;
  height: 1px;
  width: 1px;
  overflow: hidden;
  clip: rect(1px, 1px, 1px, 1px);
}

// Turns off the element-invisible effect.
@mixin element-invisible-off {
  position: static !important;
  clip: auto;
  height: auto;
  width: auto;
  overflow: auto;
}

// Makes an element visually hidden by default, but visible when focused.
@mixin element-focusable {
  @include element-invisible;

  &:active,
  &:focus {
    @include element-invisible-off;
  }
}

// Layout mixins
@mixin three-columns($parent, $child) {
  #{$parent} {
    display: flex;
    align-items: flex-start;
    flex-wrap: wrap;
    justify-content: space-between;

     > #{$child} {
      width: susy-span(12);@include media(tablet) {
        width: susy-span(6);
      }@include media(tablet-large) {
        width: susy-span(4);
      }
    }
  }
}

// Other
// Arrow in front of links
@mixin link-arrow($color) {
  display: inline-block;
  width: .5em;
  height: .5em;
  margin-right: .7em;
  border-top: 2px solid $color;
  border-right: 2px solid $color;
  content: "";
  transform: rotate(45deg);
}

@mixin read-more($color1, $color2) {
  color: $color1;
  text-decoration: none;

  &::before {
    @include link-arrow($color2);
    // content: '';
    // display: inline-block;
    // width: .5em;
    // height: .5em;
    // margin-right: .7em;
    // border-top: 1px solid $color2;
    // border-right: 1px solid $color2;
    // transform: rotate(45deg);
  }
}

// Helper function for working with Sass maps.
// Example: @include print($configuration);
@mixin print($declarations) {
  @each $property, $value in $declarations {
    #{$property}: $value;
  }
}
